

package ru.itmo.kotlin.plugin.runners;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link GenerateNewCompilerTests.kt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
public class DiagnosticTestGenerated extends AbstractDiagnosticTest {
    @Nested
    @TestMetadata("testData/diagnostic/correct")
    @TestDataPath("$PROJECT_ROOT")
    public class Correct {
        @Test
        public void testAllFilesPresentInCorrect() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("testData/diagnostic/correct"), Pattern.compile("^(.+)\\.kt$"), null, true);
        }

        @Test
        @TestMetadata("simple.kt")
        public void testSimple() throws Exception {
            runTest("testData/diagnostic/correct/simple.kt");
        }
    }

    @Nested
    @TestMetadata("testData/diagnostic/incorrect")
    @TestDataPath("$PROJECT_ROOT")
    public class Incorrect {
        @Test
        public void testAllFilesPresentInIncorrect() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("testData/diagnostic/incorrect"), Pattern.compile("^(.+)\\.kt$"), null, true);
        }

        @Test
        @TestMetadata("simple.kt")
        public void testSimple() throws Exception {
            runTest("testData/diagnostic/incorrect/simple.kt");
        }
    }

    @Nested
    @TestMetadata("testData/diagnostic/inheritance")
    @TestDataPath("$PROJECT_ROOT")
    public class Inheritance {
        @Test
        public void testAllFilesPresentInInheritance() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("testData/diagnostic/inheritance"), Pattern.compile("^(.+)\\.kt$"), null, true);
        }

        @Test
        @TestMetadata("simple.kt")
        public void testSimple() throws Exception {
            runTest("testData/diagnostic/inheritance/simple.kt");
        }
    }

    @Nested
    @TestMetadata("testData/diagnostic/innerNested")
    @TestDataPath("$PROJECT_ROOT")
    public class InnerNested {
        @Test
        public void testAllFilesPresentInInnerNested() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("testData/diagnostic/innerNested"), Pattern.compile("^(.+)\\.kt$"), null, true);
        }

        @Test
        @TestMetadata("simple.kt")
        public void testSimple() throws Exception {
            runTest("testData/diagnostic/innerNested/simple.kt");
        }
    }
}
